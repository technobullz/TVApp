import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:max_supreme_flutter/common_widget/common_widget.dart';
import 'package:sizer/sizer.dart';
import '../constant/const.dart';
import 'package:get/get.dart';

class SettingsScreen extends StatefulWidget {
  const SettingsScreen({Key? key}) : super(key: key);

  @override
  State<SettingsScreen> createState() => _SettingsScreenState();
}

class _SettingsScreenState extends State<SettingsScreen> {
  int selected = 0;
  int showSelected = 0;

  List items = [
    'Account Info',
    'Theme Setting',
  ];
  List accountInfo = [
    {
      'title': "Name",
      'value': "Abhishek Sharma",
    },
    {
      'title': "Machine ID",
      'value': "LKF5SJ9HE0EYUW16PZ8",
    },
    {
      'title': "Current Package Name",
      'value': "1 Year Package",
    },
    {
      'title': "Last Payment",
      'value': "0",
    },
    {
      'title': "Expiry Date",
      'value': "0000-00-00   00:00:00",
    },
    {
      'title': "Subscription Date",
      'value': "0000-00-00   00:00:00",
    },
  ];

  FocusNode? focusNode;
  FocusNode? focusNode1;

  setFirstFocus() {
    if (focusNode == null) {
      focusNode = FocusNode();
      focusNode1 = FocusNode();
      FocusScope.of(context).requestFocus(focusNode);
    }
  }

  goUp(BuildContext context, FocusNode node, int index) {
    FocusScope.of(context).requestFocus(node);
    setState(() {});
    selected = index;
  }

  goDown(BuildContext context, FocusNode node, int index) {
    FocusScope.of(context).requestFocus(node);
    setState(() {});
    selected = index;
  }

  @override
  void dispose() {
    focusNode!.dispose();
    focusNode1!.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    if (focusNode == null) {
      setFirstFocus();
    }
    return Scaffold(
      body: CommonWidget.commonBackground(
        body: Row(
          children: [
            Container(
              height: double.infinity,
              width: 150.sp,
              decoration: const BoxDecoration(color: Colors.black38),
              child: Column(
                children: [
                  SizedBox(
                    height: 2.h,
                  ),
                  SafeArea(
                    child: Padding(
                      padding: EdgeInsets.symmetric(horizontal: 3.w),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Text(
                            "Settings",
                            style: TextStyle(
                                color: Colors.white,
                                fontWeight: FontWeight.w500,
                                fontSize: 13.sp),
                          ),
                          Image.asset(
                            'assets/images/search icon.png',
                            height: 13.sp,
                            width: 13.sp,
                          )
                        ],
                      ),
                    ),
                  ),
                  SizedBox(
                    width: 150.sp,
                    child: Padding(
                      padding:
                          EdgeInsets.symmetric(horizontal: 3.w, vertical: 3.h),
                      child: Image.asset(
                        'assets/images/divider.png',
                      ),
                    ),
                  ),
                  Shortcuts(
                    shortcuts: <LogicalKeySet, Intent>{
                      LogicalKeySet(LogicalKeyboardKey.arrowUp): UpIntent6(),
                      LogicalKeySet(LogicalKeyboardKey.arrowDown):
                          DownIntent6(),
                    },
                    child: Column(children: [
                      InkWell(
                        onTap: () {
                          setState(() {
                            selected = 0;
                          });
                        },
                        child: Column(
                          children: [
                            Actions(
                              actions: <Type, Action<Intent>>{
                                DownIntent6: CallbackAction(
                                  onInvoke: (intent) =>
                                      goDown(context, focusNode1!, 1),
                                ),
                                // UpIntent3: CallbackAction(
                                //   onInvoke: (intent) => goUp(
                                //     context,
                                //     _allNodes[i],
                                //   ),
                                // ),
                              },
                              child: Focus(
                                focusNode: focusNode,
                                child: Container(
                                  height: 35.sp,
                                  width: 150.sp,
                                  decoration: BoxDecoration(
                                    color: selected == 0 && focusNode!.hasFocus
                                        ? primaryColor
                                        : Colors.transparent,
                                  ),
                                  child: Row(
                                    children: [
                                      SizedBox(
                                        width: 4.w,
                                      ),
                                      Text(
                                        "Account Info",
                                        style: TextStyle(
                                            color: Colors.white,
                                            fontWeight: FontWeight.w500,
                                            fontSize: 13.sp),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            Divider(
                              height: 0,
                              color: selected == 0
                                  ? Colors.transparent
                                  : primaryColor,
                              thickness: selected == 0 ? 2 : 0,
                            ),
                          ],
                        ),
                      ),
                      InkWell(
                        onTap: () {
                          setState(() {
                            selected = 1;
                          });
                        },
                        child: Column(
                          children: [
                            Actions(
                              actions: <Type, Action<Intent>>{
                                // DownIntent3: CallbackAction(
                                //   onInvoke: (intent) => goDown(
                                //     context,
                                //     focusNode1!,
                                //   ),
                                // ),
                                UpIntent6: CallbackAction(
                                  onInvoke: (intent) =>
                                      goUp(context, focusNode!, 0),
                                ),
                              },
                              child: Focus(
                                focusNode: focusNode1,
                                child: Container(
                                  height: 35.sp,
                                  width: 150.sp,
                                  decoration: BoxDecoration(
                                    color: selected == 1 && focusNode1!.hasFocus
                                        ? primaryColor
                                        : Colors.transparent,
                                  ),
                                  child: Row(
                                    children: [
                                      SizedBox(
                                        width: 4.w,
                                      ),
                                      Text(
                                        "Theme Setting",
                                        style: TextStyle(
                                            color: Colors.white,
                                            fontWeight: FontWeight.w500,
                                            fontSize: 13.sp),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            Divider(
                              height: 0,
                              color: selected == 1
                                  ? Colors.transparent
                                  : primaryColor,
                              thickness: selected == 1 ? 2 : 0,
                            ),
                          ],
                        ),
                      ),
                    ]),
                  ),
                ],
              ),
            ),
            Padding(
              padding: EdgeInsets.symmetric(horizontal: 5.w),
              child: SafeArea(
                child: Padding(
                  padding: EdgeInsets.only(
                      top: Get.height > 500 ? Get.height * 0.05 : 0),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      header(),
                      SizedBox(
                        height: 10.sp,
                      ),
                      SizedBox(
                        width: 420.sp,
                        child: Image.asset(
                          'assets/images/divider.png',
                        ),
                      ),
                      SizedBox(
                        height: 25.sp,
                      ),
                      Padding(
                        padding: EdgeInsets.symmetric(horizontal: 6.w),
                        child: Container(
                          height: 170.sp,
                          width: 320.sp,
                          decoration: BoxDecoration(
                            image: DecorationImage(
                              image: AssetImage("assets/images/big_box2.png"),
                              fit: BoxFit.cover,
                            ),
                            borderRadius: BorderRadius.circular(10),
                          ),
                          child: Padding(
                            padding: EdgeInsets.symmetric(
                                horizontal: 20.sp, vertical: 8.sp),
                            child: Stack(
                              children: [
                                Column(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: List.generate(
                                      accountInfo.length,
                                      (index) => Column(
                                            children: [
                                              Row(
                                                children: [
                                                  SizedBox(
                                                    width: 130.sp,
                                                    child: Text(
                                                      accountInfo[index]
                                                          ['title'],
                                                      style: TextStyle(
                                                          color: Colors.white,
                                                          fontWeight:
                                                              FontWeight.w500,
                                                          fontSize: 10.sp),
                                                    ),
                                                  ),
                                                  Text(
                                                    accountInfo[index]['value'],
                                                    style: TextStyle(
                                                        color: Colors.white,
                                                        fontWeight:
                                                            FontWeight.w500,
                                                        fontSize: 10.sp),
                                                  ),
                                                ],
                                              ),
                                              Divider(
                                                thickness: 1,
                                                color: Colors.white,
                                              )
                                            ],
                                          )),
                                ),
                                Positioned(
                                  left: 110.sp,
                                  child: SizedBox(
                                      height: 143.sp,
                                      child: VerticalDivider(
                                        thickness: 1,
                                        color: Colors.white,
                                      )),
                                )
                              ],
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget header() {
    return SizedBox(
      child: ConstrainedBox(
        constraints:
            BoxConstraints(maxWidth: MediaQuery.of(context).size.width / 1.5),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              items[selected],
              style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.w500,
                  fontSize: 13.sp),
            ),
            Image.asset(
              'assets/images/logo.png',
              height: 35.sp,
              width: 100.sp,
            ),
          ],
        ),
      ),
    );
  }
}

class EnterIntent6 extends Intent {}

class DownIntent6 extends Intent {}

class UpIntent6 extends Intent {}
